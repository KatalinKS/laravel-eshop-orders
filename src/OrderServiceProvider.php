<?php

namespace KatalinKS\Order;

use KatalinKS\Order\Commands\OrderCommand;
use KatalinKS\Order\Contracts\Builder\Builder;
use KatalinKS\Order\Contracts\Builder\OrderAdditionalBuilder;
use KatalinKS\Order\Contracts\Builder\OrderBuyerBuilder;
use KatalinKS\Order\Contracts\Builder\OrderBuyerContactBuilder;
use KatalinKS\Order\Contracts\Builder\OrderConsigneeBuilder;
use KatalinKS\Order\Contracts\Builder\OrderDeliveryAddressBuilder;
use KatalinKS\Order\Contracts\Builder\OrderDeliveryBuilder;
use KatalinKS\Order\Contracts\Builder\OrderLegalRequisitesBuilder;
use KatalinKS\Order\Contracts\Builder\OrderPaymentBuilder;
use KatalinKS\Order\Contracts\Dictionary\OrderItemStatus as OrderItemStatusContract;
use KatalinKS\Order\Contracts\Dictionary\OrderStatus as OrderStatusContract;
use KatalinKS\Order\Contracts\Factory\Factory;
use KatalinKS\Order\Contracts\Factory\OrderAdditionalFactory;
use KatalinKS\Order\Contracts\Factory\OrderBuyerContactFactory;
use KatalinKS\Order\Contracts\Factory\OrderBuyerFactory;
use KatalinKS\Order\Contracts\Factory\OrderConsigneeFactory;
use KatalinKS\Order\Contracts\Factory\OrderDeliveryAddressFactory;
use KatalinKS\Order\Contracts\Factory\OrderDeliveryFactory;
use KatalinKS\Order\Contracts\Factory\OrderFactory;
use KatalinKS\Order\Contracts\Factory\OrderItemFactory;
use KatalinKS\Order\Contracts\Factory\OrderLegalRequisitesFactory;
use KatalinKS\Order\Contracts\Factory\OrderPaymentFactory;
use KatalinKS\Order\Contracts\Order as OrderContract;
use KatalinKS\Order\Contracts\OrderAdditional as OrderAdditionalContract;
use KatalinKS\Order\Contracts\OrderBuyer as OrderBuyerContract;
use KatalinKS\Order\Contracts\OrderBuyerContact as OrderBuyerContactContract;
use KatalinKS\Order\Contracts\OrderConsignee;
use KatalinKS\Order\Contracts\OrderDelivery;
use KatalinKS\Order\Contracts\OrderDeliveryAddress;
use KatalinKS\Order\Contracts\OrderItem;
use KatalinKS\Order\Contracts\OrderLegalRequisites;
use KatalinKS\Order\Contracts\OrderPayment;
use KatalinKS\Order\Contracts\Repository\OrderAdditionalRepository;
use KatalinKS\Order\Contracts\Repository\OrderBuyerRepository;
use KatalinKS\Order\Contracts\Repository\OrderConsigneeRepository;
use KatalinKS\Order\Contracts\Repository\OrderDeliveryAddressRepository;
use KatalinKS\Order\Contracts\Repository\OrderDeliveryRepository;
use KatalinKS\Order\Contracts\Repository\OrderItemRepository;
use KatalinKS\Order\Contracts\Repository\OrderLegalRequisitesRepository;
use KatalinKS\Order\Contracts\Repository\OrderPaymentRepository;
use KatalinKS\Order\Contracts\Repository\OrderRepository;
use KatalinKS\Order\Models\Dictionary\OrderItemStatus;
use KatalinKS\Order\Models\Dictionary\OrderStatus;
use KatalinKS\Order\Models\OrderAdditional;
use KatalinKS\Order\Models\OrderBuyer;
use KatalinKS\Order\Models\OrderBuyerContact;
use Spatie\LaravelPackageTools\Package;
use Spatie\LaravelPackageTools\PackageServiceProvider;

class OrderServiceProvider extends PackageServiceProvider
{
    public function boot()
    {
        $this->registerModels()
            ->registerBuilders()
            ->registerRepositories()
            ->registerBuilders();

        return parent::boot(); // TODO: Change the autogenerated stub
    }

    public function configurePackage(Package $package): void
    {
        /*
         * This class is a Package Service Provider
         *
         * More info: https://github.com/spatie/laravel-package-tools
         */
        $package
            ->name('laravel-eshop-orders')
            ->hasConfigFile()
            ->hasViews()
            ->hasMigration('create_laravel-eshop-orders_table')
            ->hasCommand(OrderCommand::class);
    }

    protected function registerModels(): self
    {
        $this->app->bind(OrderContract::class, \KatalinKS\Order\Models\Order::class);
        $this->app->bind(OrderAdditionalContract::class, OrderAdditional::class);
        $this->app->bind(OrderBuyerContract::class, OrderBuyer::class);
        $this->app->bind(OrderBuyerContactContract::class, OrderBuyerContact::class);
        $this->app->bind(OrderConsignee::class, \KatalinKS\Order\Models\OrderConsignee::class);
        $this->app->bind(OrderDelivery::class, \KatalinKS\Order\Models\OrderDelivery::class);
        $this->app->bind(OrderDeliveryAddress::class, \KatalinKS\Order\Models\OrderDeliveryAddress::class);
        $this->app->bind(OrderItem::class, \KatalinKS\Order\Models\OrderItem::class);
        $this->app->bind(OrderLegalRequisites::class, \KatalinKS\Order\Models\OrderLegalRequisites::class);
        $this->app->bind(OrderPayment::class, \KatalinKS\Order\Models\OrderPayment::class);
        //Словари
        $this->app->bind(OrderStatusContract::class, OrderStatus::class);
        $this->app->bind(OrderItemStatusContract::class, OrderItemStatus::class);



        return $this;
    }

    protected function registerRepositories(): self
    {
        $this->app->bind(OrderAdditionalRepository::class, \KatalinKS\Order\Repository\OrderAdditionalRepository::class);
        $this->app->bind(OrderBuyerRepository::class, \KatalinKS\Order\Repository\OrderBuyerRepository::class);
        $this->app->bind(OrderConsigneeRepository::class, \KatalinKS\Order\Repository\OrderConsigneeRepository::class);
        $this->app->bind(OrderDeliveryAddressRepository::class, \KatalinKS\Order\Repository\OrderDeliveryAddressRepository::class);
        $this->app->bind(OrderDeliveryRepository::class, \KatalinKS\Order\Repository\OrderDeliveryRepository::class);
        $this->app->bind(OrderItemRepository::class, \KatalinKS\Order\Repository\OrderItemRepository::class);
        $this->app->bind(OrderLegalRequisitesRepository::class, \KatalinKS\Order\Repository\OrderLegalRequisitesRepository::class);
        $this->app->bind(OrderPaymentRepository::class, \KatalinKS\Order\Repository\OrderPaymentRepository::class);
        $this->app->bind(OrderRepository::class, \KatalinKS\Order\Repository\OrderRepository::class);

        return $this;
    }

    protected function registerFactories(): self
    {
        $this->app->bind(Factory::class, \KatalinKS\Order\Factories\Factory::class);
        $this->app->bind(OrderAdditionalFactory::class, \KatalinKS\Order\Factories\OrderAdditionalFactory::class);
        $this->app->bind(OrderBuyerContactFactory::class, \KatalinKS\Order\Factories\OrderBuyerContactFactory::class);
        $this->app->bind(OrderBuyerFactory::class, \KatalinKS\Order\Factories\OrderBuyerFactory::class);
        $this->app->bind(OrderConsigneeFactory::class, \KatalinKS\Order\Factories\OrderConsigneeFactory::class);
        $this->app->bind(OrderDeliveryAddressFactory::class, \KatalinKS\Order\Factories\OrderDeliveryAddressFactory::class);
        $this->app->bind(OrderDeliveryFactory::class, \KatalinKS\Order\Factories\OrderDeliveryFactory::class);
        $this->app->bind(OrderFactory::class, \KatalinKS\Order\Factories\OrderFactory::class);
        $this->app->bind(OrderItemFactory::class, \KatalinKS\Order\Factories\OrderItemFactory::class);
        $this->app->bind(OrderLegalRequisitesFactory::class, \KatalinKS\Order\Factories\OrderLegalRequisitesFactory::class);
        $this->app->bind(OrderPaymentFactory::class, \KatalinKS\Order\Factories\OrderPaymentFactory::class);

        return $this;
    }

    protected function registerBuilders(): self
    {
        $this->app->bind(Builder::class, \KatalinKS\Order\Builder\Builder::class);
        $this->app->bind(OrderAdditionalBuilder::class, \KatalinKS\Order\Builder\OrderAdditionalBuilder::class);
        $this->app->bind(OrderBuyerBuilder::class, \KatalinKS\Order\Builder\OrderBuyerBuilder::class);
        $this->app->bind(OrderBuyerContactBuilder::class, \KatalinKS\Order\Builder\OrderBuyerContactBuilder::class);
        $this->app->bind(OrderConsigneeBuilder::class, \KatalinKS\Order\Builder\OrderConsigneeBuilder::class);
        $this->app->bind(OrderDeliveryAddressBuilder::class, \KatalinKS\Order\Builder\OrderDeliveryAddressBuilder::class);
        $this->app->bind(OrderDeliveryBuilder::class, \KatalinKS\Order\Builder\OrderDeliveryBuilder::class);
        $this->app->bind(OrderLegalRequisitesBuilder::class, \KatalinKS\Order\Builder\OrderLegalRequisitesBuilder::class);
        $this->app->bind(OrderPaymentBuilder::class, \KatalinKS\Order\Builder\OrderPaymentBuilder::class);

        return $this;
    }
}
